Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `
	precision highp float;

	float scale = 32.0;
	float turbulence = 50.0;
	float period = 32.0;
	float sharpness = 1.0;

	varying vec4 worldPos;

	float snoise(vec3 r) {
  		vec3 s = vec3(7502, 22777, 4767);
  		float w = 0.0;
  		for(int i=0; i<16; i++) {
    		w += sin( dot(s - vec3(32768, 32768, 32768),
            r * 0.4) / 65536.0);
    		s = mod(s, 32768.0) * 2.0 + floor(s / 32768.0);
  		}
  		return w / 32.0 + 0.5;
	}

	vec3 getColor(vec3 position) {
		float w = position.x * period + pow(snoise(position.xyz * scale), sharpness) * turbulence;
		w = pow(sin(w)*0.5+0.5, 4.0); // use smooth sine for soft stripes
  		return 
  			vec3(0, 0, 1) * w +     // veins
    		vec3(1, 1, 1) * (1.0-w);  // rock
	}

	void main(void) {
		gl_FragColor = vec4(getColor(worldPos.xyz), 1);
	}
`;